global:
  dnsService: "coredns"

storage: azure

azure:
  # 'Storage account' name
  account_name: my-account-name
  # 'Blob service' 'Container' name
  container_name: my-container-name
  # 'Storage account' 'Access key'
  account_key: my-account-key

# Loki consists of multiple microservices. Gateway is an nginx-based proxy
# that routes requests to correct microservices. It should be consider the entry point
# of your Loki deployment.
gateway:
  replicas: 3
  ingress:
    enabled: true
    annotations:
      # this annotation means cert-manager will automatically create a ACME certificate
      cert-manager.io/cluster-issuer: letsencrypt-giantswarm
    hosts:
      # host name assigned to your loki instance (must be registered in DNS)
      - host: loki.ofrv5.k8s.gremlin.germanywestcentral.azure.gigantic.io
        paths:
          - /
    tls:
      - hosts:
          # host name assigned to your loki instance (must be registered in DNS)
          - loki.ofrv5.k8s.gremlin.germanywestcentral.azure.gigantic.io
        secretName: loki-ingress-cert
  # By default, Loki offers no authentication. It just expects the `X-Scope-OrgID`
  # HTTP header to be set to indicate which tenant's logs are these. To enable
  # minimal security, you can ask gateway to do HTTP basicAuth using `username` and
  # `password` or point it to a secret containing the `.htpasswd` file, which includes
  # multiple username-password pairs.
  # Please note: no checking of the Tenant ID vs username is performed!
  basicAuth:
    enabled: true
    username: "loki"
    password: "my-brother-is-thor"
    # -- Existing basic auth secret to use. Must contain '.htpasswd'
    # existingSecret: loki-ingress-auth

# Shared configuration for all components
# key _shared_config does not actually exist in the apps values.yaml
# We're using it in other keys through yaml anchors
_shared_config: &shared-conf
  persistence:
    storageClass: default

compactor: *shared-conf

ruler: *shared-conf

# giantswarm.io/machine-pool ids (hon60) below reference the node pool ids
# replace them with your ids of your node pools

ingester:
  <<: *shared-conf
  replicas: 2
  affinity: |
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: giantswarm.io/machine-pool
            operator: In
            values:
            - hon60
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              {{- include "loki.ingesterSelectorLabels" . | nindent 10 }}
          topologyKey: kubernetes.io/hostname
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                {{- include "loki.ingesterSelectorLabels" . | nindent 12 }}
            topologyKey: failure-domain.beta.kubernetes.io/zone

querier:
  <<: *shared-conf
  replicas: 2
  affinity: |
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: giantswarm.io/machine-pool
            operator: In
            values:
            - hon60
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              {{- include "loki.querierSelectorLabels" . | nindent 10 }}
          topologyKey: kubernetes.io/hostname
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                {{- include "loki.querierSelectorLabels" . | nindent 12 }}
            topologyKey: failure-domain.beta.kubernetes.io/zone
