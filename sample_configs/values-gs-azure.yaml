---
multiTenantAuth:
  enabled: true
  replicas: 3
  credentials: |-
    users:
      - username: Tenant1
        password: 1tnaneT
        orgid: tenant-1
      - username: Tenant2
        password: 2tnaneT
        orgid: tenant-2

loki:
  # By default, Loki offers no authentication. It just expects the `X-Scope-OrgID`
  # HTTP header to be set to indicate which tenant's logs are these. To enable
  # minimal security, you can configure the gateway to route traffic through multi-tenant-proxy
  # to do HTTP basicAuth and overwriting the tenant id header
  loki:
    compactor:
      retention_enabled: true
      delete_request_store: azure
    schemaConfig:
      # Beware when Changing this config on an existing Loki
      # Doc is here: https://grafana.com/docs/loki/latest/storage/#upgrading-schemas
      configs:
        - from: 2024-04-01
          object_store: s3
          store: tsdb
          schema: v13
          index:
            prefix: index_
            period: 24h
    storage:
      type: azure
      bucketNames:
        # 'Blob service' 'Container' name
        chunks: my-container-name
        ruler: my-container-name
        admin: my-container-name
      azure:
        # 'Storage acccunt' name
        accountName: my-account-name
        # 'Storage account' 'Access key'
        accountKey: my-account-key

  # Loki consists of multiple microservices. Gateway is an nginx-based proxy
  # that routes requests to correct microservices. It should be consider the entry point
  # of your Loki deployment.
  gateway:
    replicas: 3
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        # this annotation means cert-manager will automatically create a ACME certificate
        cert-manager.io/cluster-issuer: letsencrypt-giantswarm
      hosts:
        # host name assigned to your loki instance (must be registered in DNS)
        - host: loki.ofrv5.k8s.gremlin.germanywestcentral.azure.gigantic.io
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - hosts:
            # host name assigned to your loki instance (must be registered in DNS)
            - loki.ofrv5.k8s.gremlin.germanywestcentral.azure.gigantic.io
          secretName: loki-ingress-cert
    nginxConfig:
      customReadUrl: http://loki-multi-tenant-proxy.default.svc.cluster.local:3100
      customWriteUrl: http://loki-multi-tenant-proxy.default.svc.cluster.local:3101
      customBackendUrl: http://loki-multi-tenant-proxy.default.svc.cluster.local:3100

  # Shared configuration for all components
  # key _shared_config does not actually exist in the apps values.yaml
  # We're using it in other keys through yaml anchors
  _shared_config: &shared-conf
    persistence:
      storageClass: default

  # giantswarm.io/machine-pool ids (hon60) below reference the node pool ids
  # replace them with your ids of your node pools

  write: *shared-conf

  read: *shared-conf
