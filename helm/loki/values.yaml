global:
  image:
    # -- Overrides the Docker registry globally for all images
    registry: gsoci.azurecr.io
  # -- Overrides the priorityClassName for all pods
  priorityClassName:
  # -- configures cluster domain ("cluster.local" by default)
  clusterDomain: "cluster.local"
  # -- configures DNS service name
  dnsService: "coredns"
  # -- configures DNS service namespace
  dnsNamespace: "kube-system"

multiTenantAuth:
  # -- Specifies whether the multi-tenant proxy should be enabled
  enabled: false
  # -- Number of replicas for the multi-tenant proxy
  replicas: 3
  autoscaling:
    # -- Enable autoscaling for the multi-tenant proxy
    enabled: true
    # -- Minimum autoscaling replicas for the multi-tenant proxy
    minReplicas: 2
    # -- Maximum autoscaling replicas for the multi-tenant proxy
    maxReplicas: 4
    # -- Target CPU utilisation percentage for the multi-tenant proxy
    targetCPUUtilizationPercentage: 90
    # -- Target memory utilisation percentage for the multi-tenant proxy
    targetMemoryUtilizationPercentage:
  # -- See `kubectl explain deployment.spec.strategy` for more
  # -- ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  image:
    # -- Repository to get multi-tenant proxy image from.
    repository: giantswarm/grafana-multi-tenant-proxy
    tag: 0.5.0-db1a390e59aded476385f184cd143b46ea48b3de
    pullPolicy: IfNotPresent
    pullSecrets: []

  configReloader:
    image:
      # -- Repository to get config reloader image from.
      repository: giantswarm/configmap-reload
      # -- Tag of image to use for config reloading.
      tag: v0.13.1

    # -- Resource requests and limits to apply to the config reloader containers.
    resources:
      requests:
        cpu: "1m"
        memory: "5Mi"

    # -- Security context to apply to the config reloader containers.
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      seccompProfile:
        type: RuntimeDefault
  # Environment variables for the multi-tenant proxy
  # env: []
  # -- Resource requests and limits for the write
  resources:
    limits:
      memory: 500Mi
    requests:
      memory: 50Mi
      cpu: 50m
  # disable if credentials are provided externally
  deployCredentials: true
  credentials: |-
    users:
      - username: Tenant1
        password: 1tnaneT
        orgid: tenant-1
      - username: Tenant2
        password: 2tnaneT
        orgid: tenant-2
  podSecurityContext:
    fsGroup: 10001
    runAsGroup: 10001
    runAsNonRoot: true
    runAsUser: 10001
    seccompProfile:
      type: RuntimeDefault
  # -- The SecurityContext for Loki containers
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    seccompProfile:
      type: RuntimeDefault
  write:
    # -- disabling this allows write requests to set whatever orgid they want
    enforceOrgId: true
  port: 3501

ciliumNetworkPolicy:
  coredns:
    enabled: true

loki:
  # You can make the whole chart ineffective by setting this one to "false"
  enabled: true

  loki:
    image:
      repository: giantswarm/loki

    # -- The SecurityContext for Loki pods
    podSecurityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001
      seccompProfile:
        type: RuntimeDefault
    # -- The SecurityContext for Loki containers
    containerSecurityContext:
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault
    # -- Loki Storage schema configuration
    #    Loki 3 requires a schema to be configured so we configure v13, the latest.
    #    Doc is here: https://grafana.com/docs/loki/latest/configure/storage/#schema-config
    schemaConfig:
      configs:
        - from: 2024-04-01
          object_store: s3
          store: tsdb
          schema: v13
          index:
            prefix: index_
            period: 24h
    # -- Loki Storage configuration
    storage:
      # --- Loki requires a bucket for chunks and the ruler.
      # TODO(user): Please provide these values if you are using object storage.
      bucketNames:
        chunks: chunks
        ruler: ruler
        admin: admin

  gateway:
    extraContainers:
      - name: dnsmasq
        image: "giantswarm/go-dnsmasq:release-1.0.7"
        imagePullPolicy: IfNotPresent
        args:
          - --listen
          - "127.0.0.1:8053"
          - --hostsfile=/etc/hosts
          - --enable-search
          - --verbose
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 10Mi
    nginxConfig:
      resolver: "127.0.0.1:8053 valid=60s"
      # To be set when using MultiTenant with GiantSwarm multi-tenant-proxy
      #customReadUrl: http://loki-multi-tenant-proxy.default.svc.cluster.local:3100
      #customWriteUrl: http://loki-multi-tenant-proxy.default.svc.cluster.local:3101
      #customBackendUrl: http://loki-multi-tenant-proxy.default.svc.cluster.local:3102
    autoscaling:
      enabled: true
      minReplicas: 2
      targetCPUUtilizationPercentage: 90
      targetMemoryUtilizationPercentage: 90
    deploymentStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
    image:
      repository: giantswarm/nginx-unprivileged
    resources:
      limits:
        memory: 500Mi
      requests:
        memory: 50Mi
        cpu: 50m
    # -- The SecurityContext for gateway containers
    podSecurityContext:
      fsGroup: 101
      runAsGroup: 101
      runAsNonRoot: true
      runAsUser: 101
      seccompProfile:
        type: RuntimeDefault
    # -- The SecurityContext for gateway containers
    containerSecurityContext:
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault

  backend:
    autoscaling:
      enabled: true
      minReplicas: 2
      targetCPUUtilizationPercentage: 90
      targetMemoryUtilizationPercentage: 90
    resources:
      limits:
        memory: 3Gi
      requests:
        memory: 1Gi
        cpu: 200m

  read:
    autoscaling:
      enabled: true
      minReplicas: 2
      targetCPUUtilizationPercentage: 90
      targetMemoryUtilizationPercentage: 90
    resources:
      limits:
        memory: 3Gi
      requests:
        memory: 1Gi
        cpu: 200m
    extraArgs:
      - -querier.multi-tenant-queries-enabled

  write:
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 10
      targetMemoryUtilizationPercentage: 90
    resources:
      limits:
        memory: 4Gi
      requests:
        memory: 3Gi
        cpu: 500m

  # -- Caching configuration
  chunksCache:
    enabled: true
  resultsCache:
    enabled: true

  # -- Canary configuration
  lokiCanary:
    enabled: false

  # -- Configuration of monitoring components
  monitoring:
    dashboards:
      enabled: false
    rules:
      enabled: false
    alerts:
      enabled: false
    serviceMonitor:
      enabled: true
    selfMonitoring:
      enabled: false
      grafanaAgent:
        installOperator: false

  # -- Configuration of Loki's network policy
  networkPolicy:
    enabled: true
    flavor: cilium
    egressWorld:
      # -- Enable additional cilium egress rules to external world for write, read and backend.
      enabled: true
    egressKubeApiserver:
      # -- Enable additional cilium egress rules to kube-apiserver for backend.
      enabled: true

  rbac:
    pspEnabled: true
    pspAnnotations:
      seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'

  # -- Configuration of Loki's service account
  serviceAccount:
    # -- Specifies whether a ServiceAccount should be created
    create: true
    # -- The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template
    name: loki
    # -- Image pull secrets for the service account
    imagePullSecrets: []
    # -- Annotations for the service account
    annotations: {}
    # -- Labels for the service account
    labels: {}
    # -- Set this toggle to false to opt out of automounting API credentials for the service account
    automountServiceAccountToken: true

  sidecar:
    image:
      repository: giantswarm/k8s-sidecar
    securityContext:
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi

  test:
    enabled: false
