---
multiTenantAuth:
  # -- Specifies whether the multi-tenant proxy should be enabled
  enabled: false
  # -- Number of replicas for the multi-tenant proxy
  replicas: 3
  autoscaling:
    # -- Enable autoscaling for the multi-tenant proxy
    enabled: true
    # -- Minimum autoscaling replicas for the multi-tenant proxy
    minReplicas: 2
    # -- Maximum autoscaling replicas for the multi-tenant proxy
    maxReplicas: 4
    # -- Target CPU utilisation percentage for the multi-tenant proxy
    targetCPUUtilizationPercentage: 60
    # -- Target memory utilisation percentage for the multi-tenant proxy
    targetMemoryUtilizationPercentage:
  # -- See `kubectl explain deployment.spec.strategy` for more
  # -- ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  image:
    repository: giantswarm/loki-multi-tenant-proxy-gs
    tag: 0.1.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  # -- Resource requests and limits for the write
  resources:
    limits:
      memory: 500Mi
    requests:
      memory: 200Mi
      cpu: 50m
  credentials: |-
    users:
      - username: Tenant1
        password: 1tnaneT
        orgid: tenant-1
      - username: Tenant2
        password: 2tnaneT
        orgid: tenant-2
  podSecurityContext:
    fsGroup: 10001
    runAsGroup: 10001
    runAsNonRoot: true
    runAsUser: 10001
    seccompProfile:
      type: RuntimeDefault
  # -- The SecurityContext for Loki containers
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    seccompProfile:
      type: RuntimeDefault

global:
  image:
    # -- Overrides the Docker registry globally for all images
    registry: docker.io
  # -- Overrides the priorityClassName for all pods
  priorityClassName: null
  # -- configures cluster domain ("cluster.local" by default)
  clusterDomain: "cluster.local"
  # -- configures DNS service name
  dnsService: "coredns"
  # -- configures DNS service namespace
  dnsNamespace: "kube-system"

serviceAccount:
  # -- Specifies whether a ServiceAccount should be created
  create: true
  # -- The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name: loki
  # -- Image pull secrets for the service account
  imagePullSecrets: []
  # -- Annotations for the service account
  annotations: {}
  # -- Set this toggle to false to opt out of automounting API credentials for the service account
  automountServiceAccountToken: true

loki:
  # You can make the whole chart ineffective by setting this one to "false"
  enabled: true

  gateway:
    nginxConfig:
      genMultiTenant: false
      # To be set when using MultiTenant with GiantSwarm multi-tenant-proxy
      #customReadUrl: http://loki-multi-tenant-proxy.default.svc.cluster.local:3100
      #customWriteUrl: http://loki-multi-tenant-proxy.default.svc.cluster.local:3101
      #customBackendUrl: http://loki-multi-tenant-proxy.default.svc.cluster.local:3102
    autoscaling:
      enabled: true
      minReplicas: 2
    deploymentStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
    image:
      repository: giantswarm/nginx-unprivileged
    resources:
      limits:
        memory: 500Mi
      requests:
        memory: 200Mi
        cpu: 50m
    # -- The SecurityContext for gateway containers
    podSecurityContext:
      fsGroup: 101
      runAsGroup: 101
      runAsNonRoot: true
      runAsUser: 101
      seccompProfile:
        type: RuntimeDefault
    # -- The SecurityContext for gateway containers
    containerSecurityContext:
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault

  backend:
    autoscaling:
      enabled: true
      minReplicas: 2
    resources:
      limits:
        memory: 3Gi
      requests:
        memory: 1Gi
        cpu: 50m

  read:
    autoscaling:
      enabled: true
      minReplicas: 2
    resources:
      limits:
        memory: 3Gi
      requests:
        memory: 1Gi
        cpu: 50m
    extraArgs:
      - -querier.multi-tenant-queries-enabled

  write:
    autoscaling:
      enabled: true
      minReplicas: 2
    resources:
      limits:
        memory: 4Gi
      requests:
        memory: 3Gi
        cpu: 500m

  loki:
    image:
      repository: giantswarm/loki
    memcached:
      chunk_cache:
        enabled: false
        host: "memcached-app.loki.svc"
        service: "memcache"
        batch_size: 256
        parallelism: 10
      results_cache:
        enabled: false
        host: "memcached-app.loki.svc"
        service: "memcache"
        timeout: "500ms"
        default_validity: "24h"
    limits_config:
      enforce_metric_name: true
      ingestion_rate_mb: 10
      ingestion_burst_size_mb: 20
      max_concurrent_tail_requests: 20
    # -- The SecurityContext for Loki pods
    podSecurityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001
      seccompProfile:
        type: RuntimeDefault
    # -- The SecurityContext for Loki containers
    containerSecurityContext:
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault

  rbac:
    pspEnabled: true
    pspAnnotations:
      seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'

  monitoring:
    dashboards:
      enabled: false
    rules:
      enabled: false
    alerts:
      enabled: false
    serviceMonitor:
      enabled: true
    selfMonitoring:
      enabled: false
      grafanaAgent:
        installOperator: false
    lokiCanary:
      enabled: false

  sidecar:
    image:
      repository: giantswarm/k8s-sidecar
    securityContext:
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault

  test:
    enabled: false
